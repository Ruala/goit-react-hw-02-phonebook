{"version":3,"sources":["components/Container/Container.js","components/Form/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/App/App.js","index.js"],"names":["Container","children","className","ContactForm","state","name","number","nameInputId","uuidv4","phoneInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","onChange","id","Component","Filter","filter","filterInputId","defaultProps","ContactList","contacts","onDelete","map","key","onClick","App","target","addContact","prevState","isName","undefined","find","item","alert","deleteContact","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f89fd15.chunk.js","sourcesContent":["import React from 'react';\nimport './Container.scss';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport './ContactForm.scss';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = uuidv4();\n  phoneInputId = uuidv4();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className=\"ContactForm\" onSubmit={this.handleSubmit}>\n        <div className=\"ContactForm__item\">\n          <label className=\"ContactForm__label\" htmlFor={this.nameInputId}>\n            Name\n          </label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            id={this.nameInputId}\n          />\n        </div>\n        <div className=\"ContactForm__item\">\n          <label className=\"ContactForm__label\" htmlFor={this.phoneInputId}>\n            Number\n          </label>\n          <input\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            id={this.phoneInputId}\n          />\n        </div>\n        <button className=\"ContactForm__submit\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Filter = ({ filter, onChange }) => {\n  const filterInputId = uuidv4();\n\n  return (\n    <div>\n      <p>\n        <label htmlFor={filterInputId}>Find contacts by name</label>\n      </p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n        id={filterInputId}\n      />\n    </div>\n  );\n};\n\nFilter.defaultProps = {\n  filter: '',\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ContactList.scss';\n\nconst ContactList = ({ contacts, onDelete }) => {\n  return (\n    <ul className=\"ContactList\">\n      {contacts.map(({ id, name, number }) => (\n        <li className=\"ContactList__item\" key={id}>\n          <div className=\"ContactList__inner\">\n            <span>\n              {name}: {number}\n            </span>\n            <button type=\"button\" onClick={() => onDelete(id)}>\n              Delete\n            </button>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Container from '../Container';\nimport ContactForm from '../Form';\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleChange = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  addContact = ({ name, number }) => {\n    this.setState(prevState => {\n      const isName =\n        prevState.contacts.find(item => item.name === name) !== undefined;\n\n      isName && alert(`${name} is already in contacts.`);\n\n      return isName\n        ? prevState\n        : {\n            contacts: [\n              ...prevState.contacts,\n              { id: uuidv4(), name: name, number: number },\n            ],\n          };\n    });\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(item => item.id !== id),\n    }));\n  };\n\n  render() {\n    const contacts = this.state.contacts.filter(item =>\n      item.name.toLowerCase().includes(this.state.filter.toLowerCase()),\n    );\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter filter={this.state.filter} onChange={this.handleChange} />\n        <ContactList contacts={contacts} onDelete={this.deleteContact} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}